{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","img","main","temp","className","src","alt","App","state","isLoading","id","description","API_URL","process","axios","get","then","response","data","weather","setState","icon","this","getWeathers","imgUrl","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gQAeeA,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAE1B,OACI,sBAAKC,UAAU,UAAf,UACI,oEACA,qBAAKC,IAAKJ,EAAKK,IAAI,YACnB,6BAAKJ,IACL,wCAAWC,EAAX,e,iBCqDGI,E,4MAvDXC,MAAQ,CACJC,WAAW,EACXC,GAAI,GACJT,IAAK,GACLU,YAAa,GACbR,KAAM,I,4DAGK,IAAD,OAEJS,EAAO,wEADGC,oCAKhBC,IAAMC,IAAIH,GAASI,MAAK,SAACC,GAErB,IAAMC,EAAOD,EAASC,KAEhBC,EAAUD,EAAKC,QAAQ,GAE7B,EAAKC,SAAS,CACVV,GAAIS,EAAQT,GACZT,IAAKkB,EAAQE,KACbZ,WAAW,EACXE,YAAaQ,EAAQR,YACrBR,KAAMe,EAAKhB,KAAKC,Y,0CAMxBmB,KAAKC,gB,+BAGC,IAAD,EACyCD,KAAKd,MAA3CC,EADH,EACGA,UAAWR,EADd,EACcA,IAAKU,EADnB,EACmBA,YAAaR,EADhC,EACgCA,KAE/BqB,EAAM,0CAAsCvB,EAAtC,QAEZ,OACI,yBAASG,UAAU,YAAnB,SACKK,EACG,qBAAKL,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGJ,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CAASH,IAAKuB,EAAQtB,KAAMS,EAAaR,KAAMA,Y,GAhDrDsB,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.e3f69ab1.chunk.js","sourcesContent":["import React from \"react\";\n// import \"./Weather.css\";\n\nfunction Weather({ img, main, temp }) {\n    // console.log(id);\n    return (\n        <div className=\"weather\">\n            <h1>Your current weather at Seoul is: </h1>\n            <img src={img} alt=\"weather\" />\n            <h2>{main}</h2>\n            <h3>temp: {temp}Â°C</h3>\n        </div>\n    );\n}\n\nexport default Weather;\n","// import logo from \"./logo.svg\";\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Weather from \"./Weather\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        id: \"\",\n        img: \"\",\n        description: \"\",\n        temp: \"\",\n    };\n\n    getWeathers() {\n        const API_KEY = process.env.REACT_APP_API_KEY;\n        const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=Seoul&appid=${API_KEY}`;\n\n        // console.log(API_URL);\n\n        axios.get(API_URL).then((response) => {\n            // console.log(response);\n            const data = response.data;\n            // console.log(data);\n            const weather = data.weather[0];\n\n            this.setState({\n                id: weather.id,\n                img: weather.icon,\n                isLoading: false,\n                description: weather.description,\n                temp: data.main.temp,\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.getWeathers();\n    }\n\n    render() {\n        const { isLoading, img, description, temp } = this.state;\n        // console.log(weathers);\n        const imgUrl = `http://openweathermap.com/img/w/${img}.png`;\n\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader_text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"weathers\">\n                        <Weather img={imgUrl} main={description} temp={temp} />\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}