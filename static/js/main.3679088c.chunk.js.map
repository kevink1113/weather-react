{"version":3,"sources":["Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","img","main","temp","className","src","alt","App","state","isLoading","data","API_URL","process","axios","get","then","response","weather","setState","id","icon","description","this","getWeathers","imgUrl","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2RAeeA,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAE1B,OACI,sBAAKC,UAAU,UAAf,UACI,mEACA,qBAAKC,IAAKJ,EAAKK,IAAI,YACnB,4BAAIJ,IACJ,uCAAUC,EAAV,e,iBCuDGI,E,4MAzDXC,MAAQ,CACJC,WAAW,EACXR,IAAK,GACLS,KAAM,I,4DAGK,IAAD,OAEJC,EAAO,qFADGC,oCAKhBC,IAAMC,IAAIH,GAASI,MAAK,SAACC,GAErB,IAAMN,EAAOM,EAASN,KAEhBO,EAAUP,EAAKO,QAAQ,GAE7B,EAAKC,SAAS,CACVC,GAAIF,EAAQE,GACZlB,IAAKgB,EAAQG,KACbX,WAAW,EACXY,YAAaJ,EAAQI,YACrBX,KAAMA,S,0CAMdY,KAAKC,gB,+BAGC,IAAD,EAC4BD,KAAKd,MAA9BC,EADH,EACGA,UAAWR,EADd,EACcA,IAAKS,EADnB,EACmBA,KAElBc,EAAM,0CAAsCvB,EAAtC,QAEZ,OACI,yBAASG,UAAU,YAAnB,SACKK,EACG,qBAAKL,UAAU,SAAf,SACI,sBAAMA,UAAU,cAAhB,0BAGJ,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIH,IAAKuB,EACLtB,KAAMQ,EAAKO,QAAQ,GAAGI,YACtBlB,KAAMO,EAAKR,KAAKC,e,GAjD1BsB,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.3679088c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Weather.css\";\n\nfunction Weather({ img, main, temp }) {\n    // console.log(id);\n    return (\n        <div className=\"weather\">\n            <p>Your current weather at Seoul is: </p>\n            <img src={img} alt=\"weather\" />\n            <p>{main}</p>\n            <p>temp: {temp}Â°C</p>\n        </div>\n    );\n}\n\nexport default Weather;\n","// import logo from \"./logo.svg\";\n\nimport React from \"react\";\nimport \"./App.css\";\nimport Weather from \"./Weather\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        img: \"\",\n        data: {},\n    };\n\n    getWeathers() {\n        const API_KEY = process.env.REACT_APP_API_KEY;\n        const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=Seoul&units=metric&appid=${API_KEY}`;\n\n        // console.log(API_URL);\n\n        axios.get(API_URL).then((response) => {\n            // console.log(response);\n            const data = response.data;\n            // console.log(data);\n            const weather = data.weather[0];\n\n            this.setState({\n                id: weather.id,\n                img: weather.icon,\n                isLoading: false,\n                description: weather.description,\n                data: data,\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.getWeathers();\n    }\n\n    render() {\n        const { isLoading, img, data } = this.state;\n        // console.log(weathers);\n        const imgUrl = `http://openweathermap.com/img/w/${img}.png`;\n\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader_text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"weathers\">\n                        <Weather\n                            img={imgUrl}\n                            main={data.weather[0].description}\n                            temp={data.main.temp}\n                        />\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}